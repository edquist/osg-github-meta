{
  "_links": {
    "html": {
      "href": "https://github.com/opensciencegrid/vm-test-runs/pull/40#discussion_r131004671"
    }, 
    "pull_request": {
      "href": "https://api.github.com/repos/opensciencegrid/vm-test-runs/pulls/40"
    }, 
    "self": {
      "href": "https://api.github.com/repos/opensciencegrid/vm-test-runs/pulls/comments/131004671"
    }
  }, 
  "author_association": "OWNER", 
  "body": "The links here did not get translated properly. Should be `[VMware](http://www.vmware.com)`", 
  "commit_id": "8ab7a042325d870072db4278a0fa15d76fa1bfa0", 
  "created_at": "2017-08-02T21:42:01Z", 
  "diff_hunk": "@@ -0,0 +1,425 @@\n+Running Tests as VM Jobs\n+========================\n+\n+This repository drives the OSG Software nightly tests. Whenever updating [osg-run-tests](osg-run-tests), make sure to update the copy in `/usr/bin/` on `osghost`.\n+\n+Setting up credentials\n+----------------------\n+\n+**Note:** This one time setup must be performed before submitting any test jobs.\n+\n+1.  Contact Brian L. or Tim C. to have an account created on `osghost.chtc.wisc.edu`\n+2.  SSH to `osghost` (you will need to do this from the UW-Madison network) and create a password-less SSH key:\n+\n+        [user@client ~]$ ssh-keygen -C 'VMU test result upload key for <USER>@osghost' -f ~/.ssh/test_result_upload.key\n+\n+3.  Contact BrianL or MatS with your public key. They will add your public key to the `authorized_keys` file of the `cndrutil` user on `ingwe`.\n+4.  Add `ingwe's` pubkey to your `known_hosts` file by initiating an SSH connection. You do not need to login:\n+\n+        [user@client ~]$ ssh ingwe.cs.wisc.edu\n+        The authenticity of host 'ingwe.cs.wisc.edu (128.105.121.64)' can't be established.\n+        RSA key fingerprint is 8c:44:ac:fd:c5:9e:1c:7a:c1:e1:42:40:c3:e5:4b:fc.\n+        Are you sure you want to continue connecting (yes/no)? yes\n+        Warning: Permanently added 'ingwe.cs.wisc.edu,128.105.121.64' (RSA) to the list of known hosts.\n+        blin@ingwe.cs.wisc.edu's password:\n+\n+Running osg-test in VM Universe\n+-------------------------------\n+\n+The procedure explained in this section replaces [this](https://twiki.opensciencegrid.org/bin/view/SoftwareTeam/SoftwareDevelopmentProcess) if and only if there are functional tests for each package being tested.\n+\n+1.  From `osghost.chtc.wisc.edu`, make and populate a test run directory:\n+\n+        [user@client ~]$ osg-run-tests '<RUN DESCRIPTION>'\n+2.  Change to the test run directory (see output of osg-run-tests)\n+3.  If you need to change `osg-test`, use one of the methods below:\n+    -   Make changes to a github fork of osg-test and prepend the source lines in the yaml parameters files (see below) with the following: `<GITHUB ACCOUNT>:<BRANCH OF OSG-TEST>;`\n+    -   Edit `test-changes.patch` with test module and library changes and/or edit `osg-test.patch` with osg-test script changes. These patches can be generated with `git diff`.\n+\n+4.  If there are test failures that shouldn't be marked as failures in the reporting, edit `test-exceptions.yaml` you can add test failures to ignore with the following format:\n+\n+        # - [test_function, test_module, start date, end date].\n+        [test_04_trace, test_55_condorce, 2014-12-01, 2015-01-14]\n+\n+5.  If you want to change test run parameters, edit `parameters.d/osg32.yaml`, `parameters.d/osg33-el6.yaml`, or `parameters.d/osg33-el7.yaml` or you can add/remove yaml files with the same format. Each file in `paramaters.d` generates an osg-test run for every possible combination of the `platforms`, `sources`, and `package_sets` parameters in that file.\n+    1.  To change the distribution, modify the `platforms` section. Accepted values are listed below:\n+\n+              platforms:\n+                - centos_6_x86_64\n+                - rhel_6_x86_64\n+                - sl_6_x86_64\n+                - centos_7_x86_64\n+                - rhel_7_x86_64\n+                - sl_7_x86_64\n+    2.  To change the repos that packages are installed from, edit the sources section, which has the following format:\n+\n+            [<GITHUB ACCOUNT>:<BRANCH OF OSG-TEST>;] <INITIAL OSG VERSION>; <INTIAL YUM REPO> [>] [<UPDATE OSG VERSION>/][<UPDATE YUM REPO>]\n+            # Run osg-test with packages from 3.1-release\n+            3.1; osg\n+            # Run osg-test with packages from 3.1-testing that are then upgraded to 3.2-testing\n+            3.1; osg-testing > 3.2/osg-testing\n+            # Run osg-test with packages from 3.2-release and 3.2-testing that are then upgraded to 3.3-testing and 3-3-upcoming-testing\n+            3.2; osg, osg-testing > 3.3/osg-testing, osg-upcoming-testing\n+            # Run osg-test from the 'opensciencegrid' github account using the 'master' branch (<https://github.com/opensciencegrid/osg-test.git>) with packages from 3.2-testing\n+            opensciencegrid:master; 3.2; osg-testing\n+    3. The `package_sets` section controls the packages that are installed, the label used for reporting, whether or not SELinux is enabled (default: disabled), and whether or not to pre-install the OSG Java packages (default: enabled): \n+\n+            package_sets:\n+            #### Required ####\n+            # label - used for reporting, should be consistent across param files\n+            # packages - list of packages to install in the test run\n+            #### Optional ####\n+            # selinux - enable SELinux for the package set, otherwise Permissive mode (default: False)\n+            # osg_java - Pre-install OSG java packages (default: True)\n+            ##################\n+            - label: All\n+              selinux: False\n+              osg_java: True\n+              packages:\n+                - osg-tested-internal\n+            - label: HTCondor\n+              selinux: False\n+              osg_java: True\n+              packages:\n+                - condor.x86_64\n+                - osg-ce-condor\n+                - rsv\n+    4. The test infrastructure can read multiple yaml files in `parameters.d`, which allows you to run different, mutually exclusive tests. For example, if you wanted to test 3.3 development on EL7 in addition to the standard tests, you could add the following to a file in `paramaters.d`:\n+\n+            platform:\n+              - centos_7_x86_64\n+              - sl_7_x86_64\n+\n+            sources:\n+              - 3.3; osg-development\n+\n+            package_sets:\n+              - label: All\n+                selinux: False\n+                osg_java: True\n+                packages:\n+                  - osg-tested-internal\n+              # Explicitly add GRAM packages since they were dropped from osg-ce (SOFTWARE-2278, SOFTWARE-2291)\n+              - label: All + GRAM (3.2)\n+                selinux: False\n+                osg_java: True\n+                packages:\n+                  - osg-tested-internal-gram\n+              - label: HTCondor\n+                selinux: False\n+                osg_java: True\n+                packages:\n+                  - condor.x86_64\n+                  - osg-ce-condor\n+                  - rsv\n+              - label: GridFTP\n+                selinux: True\n+                osg_java: True\n+                packages:\n+                  - osg-gridftp\n+                  - edg-mkgridmap\n+                  - rsv\n+              - label: BeStMan\n+                selinux: False\n+                osg_java: True\n+                packages:\n+                  - osg-se-bestman\n+                  - rsv\n+              - label: VOMS\n+                selinux: False\n+                osg_java: True\n+                packages:\n+                  - osg-voms\n+                  - rsv\n+              - label: GUMS\n+                selinux: False\n+                osg_java: True\n+                packages:\n+                  - osg-gums\n+                  - rsv\n+6.  Submit the test run (you must submit the DAG from the run directory):\n+\n+        [user@client ~]$ ./master-run.dag\n+7.  Monitor the test run (as desired):\n+\n+        [user@client ~]$ condor_q -dag\n+8.  When the test run finishes, an email will go out to members of the software team (hardcoded in `email-analysis`). In the e-mail will be links to the web interface which will often not work immediately because the test results only get transferred over every 15 minutes.\n+\n+Troubleshooting\n+---------------\n+\n+### Missing Unicode Fonts\n+\n+The HTML reports for the testing results utilize unicode characters (namely the padlock to represent that SELinux was enabled). If these characters are appearing as the character code in a block, that means that the font you're using does not support these characters. To render these characters properly, perform the following steps:\n+\n+1.  Download a suitable Unicode Emoji font. We have had success with the \"Noto Emoji\" font available from <https://www.google.com/get/noto/>\n+2.  Create a `~/.fonts/` dir if one does not already exist\n+3.  Copy the `.ttf` file from the downloaded font `.zip` file into `~/.fonts/`\n+4.  Run `fc-cache -f`\n+\n+Notes about running osg-test as VM jobs\n+---------------------------------------\n+\n+This page is my (cat) collected notes and ideas about running osg-test runs as VM jobs, either locally (e.g., CHTC) or in OSG.\n+\n+### Using VM Universe in HTCondor\n+\n+For HTCondor 8.4, the documentation for VM universe is in [section 2.11](http://research.cs.wisc.edu/htcondor/manual/v8.4/2_11Virtual_Machine.html) of [the manual](http://research.cs.wisc.edu/htcondor/manual/v8.4/ref.html).\n+\n+Some quick notes:\n+\n+-   `universe = vm`\n+-   `executable` is just a label\n+-   Omit `input`, `output`, and `error`, as they are not used and will cause submit failures\n+-   Must select a `vm_type` of `vmware`, `xen`, or `kvm`\n+\n+### Using VM Universe in CHTC\n+\n+The only VM universe support in CHTC was using a now-archaic version of [http://www.vmware.com VMware](http://www.vmware.com VMware); this was set up in support of the Thomas Jahns lab. Essentially, in July 2013, there is no current support. However, the CHTC infrastructure team is interested in adding real support for at least kvm.", 
  "html_url": "https://github.com/opensciencegrid/vm-test-runs/pull/40#discussion_r131004671", 
  "id": 131004671, 
  "original_commit_id": "e2feeec43523117feefe2cf247187b6cd83ac0d4", 
  "original_position": 178, 
  "path": "README.md", 
  "position": null, 
  "pull_request_review_id": 53941671, 
  "pull_request_url": "https://api.github.com/repos/opensciencegrid/vm-test-runs/pulls/40", 
  "updated_at": "2017-08-02T21:50:22Z", 
  "url": "https://api.github.com/repos/opensciencegrid/vm-test-runs/pulls/comments/131004671", 
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5246893?v=4", 
    "events_url": "https://api.github.com/users/matyasselmeci/events{/privacy}", 
    "followers_url": "https://api.github.com/users/matyasselmeci/followers", 
    "following_url": "https://api.github.com/users/matyasselmeci/following{/other_user}", 
    "gists_url": "https://api.github.com/users/matyasselmeci/gists{/gist_id}", 
    "gravatar_id": "", 
    "html_url": "https://github.com/matyasselmeci", 
    "id": 5246893, 
    "login": "matyasselmeci", 
    "organizations_url": "https://api.github.com/users/matyasselmeci/orgs", 
    "received_events_url": "https://api.github.com/users/matyasselmeci/received_events", 
    "repos_url": "https://api.github.com/users/matyasselmeci/repos", 
    "site_admin": false, 
    "starred_url": "https://api.github.com/users/matyasselmeci/starred{/owner}{/repo}", 
    "subscriptions_url": "https://api.github.com/users/matyasselmeci/subscriptions", 
    "type": "User", 
    "url": "https://api.github.com/users/matyasselmeci"
  }
}
