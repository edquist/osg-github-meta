{
  "_links": {
    "html": {
      "href": "https://github.com/opensciencegrid/StashCache/pull/6#discussion_r68804133"
    }, 
    "pull_request": {
      "href": "https://api.github.com/repos/opensciencegrid/StashCache/pulls/6"
    }, 
    "self": {
      "href": "https://api.github.com/repos/opensciencegrid/StashCache/pulls/comments/68804133"
    }
  }, 
  "author_association": "OWNER", 
  "body": "where is `xpid` coming from?  It can't be xrdcp's pid, because xrdcp is called after this, so there is no method to know xpid beforehand.\n\nYou can kill the parent pid, which you could probably find a solution to do online. ([here?](https://superuser.com/questions/150117/how-to-get-parent-pid-of-a-given-process-in-gnu-linux-from-command-line))\n", 
  "commit_id": "e6186b173b2337fef5c81e2bb5bda3e9b7e19ab4", 
  "created_at": "2016-06-28T17:33:36Z", 
  "diff_hunk": "@@ -1,57 +1,70 @@\n-#!/bin/bash\n-while getopts \"t:f:d:s:\" opt; do\n+while getopts \"t:f:d:s:p:\" opt; do\n   case \"$opt\" in\n       t) timeout=$OPTARG ;;\n-\t  f) file=$OPTARG ;;\n-\t  d) diff=$OPTARG ;;\n-\t  s) expSize=$OPTARG ;;\n+      f) file=$OPTARG ;;\n+      d) diff=$OPTARG ;;\n+      s) expSize=$OPTARG ;;\n+      p) xpid=$OPTARG ;;\n   esac\n done\n shift $((OPTIND-1))\n \n+\n start_watchdog(){\n-\ttimeout=\"$1\"\n-\tfile=\"$2\"\n-\tdiff=\"$3\"\n-\texpSize=\"$4\"\n-\t(( i = timeout ))\n-\tprevSize=0\n-\twhile (( i > 0 ))\n-\tdo\n-\t\tif [ -e $file ]; then\n-\t\t\tnewSize=$(du -b $file | cut -f1)\n-\t\t\tnextSize=$((prevSize+diff))\n-\t\t\twantSize=$((nextSize<expSize?nextSize:expSize))\n-\t\t\tif [ $newSize -lt $((wantSize)) ]; then\n-\t\t\t\t# kill -0 $$ || exit 0\n-\t\t\t\tsleep 1\n-\t\t\t\t(( i -= 1 ))\n-\t\t\telif [ $newSize -eq $expSize ]; then\n-\t\t\t\t# Finished file\n-\t\t\t\texit 0\n-\t\t\telse\n-\t\t\t\tprevSize=$(du -b $file | cut -f1)\n-\t\t\t\t(( i = timeout ))\n-\t\t\t\tsleep 1\n-\t\t\tfi\n-\t\telse\n-\t\t\tsleep 1\n-\t\t\t(( i -= 1 )) ## to avoid infinite loop\n-\t\tfi\n-\tdone\n-\t\n-\techo \"killing process after timeout of $timeout seconds\"\n-\tkill $$\n+    timeout=\"$1\"\n+    file=\"$2\"\n+    diff=\"$3\"\n+    expSize=\"$4\"\n+    xpid=\"$5\"\n+    prevSize=0\n+    newSize=0\n+    while (( newSize<expSize ))\n+    do \n+        sleep $timeout #check status after every x seconds\n+        if [ -e $file ]; then\n+            newSize=$(du -b $file | cut -f1)\n+            nextSize=$((prevSize+diff))\n+            wantSize=$((nextSize<expSize?nextSize:expSize))\n+            if [ $newSize -eq $expSize ]; then\n+                #finished\n+                exit 0\n+            fi\n+            if [ $newSize -lt $wantSize ]; then #if time out\n+                echo \"killing process after timeout of $timeout seconds\"\n+                if ps -p $xpid > /dev/null\n+                then\n+                    #xrdcp running, kill xrdcp now\n+                    kill -9 $xpid\n+                else\n+                    #xrdcp already aborted on its own, use xrdcp exit code\n+                    xrdcp_abort=$?\n+                    exit $xrdcp_abort\n+                fi\n+                \n+            else #if file increases accordingly\n+                prevSize=$(du -b $file | cut -f1)\n+            fi\n+        else\n+            #file does not exist (timeout)\n+            if ps -p $xpid > /dev/null\n+            then\n+                #xrdcp running, killing now\n+                kill -9 $xpid\n+            else\n+               #xrdcp not running, use xrdcp exit code\n+                xrdcp_abort=$?\n+                exit $xrdcp_abort\n+            fi\n+        fi\n+    done\n+    \n+    \n }\n \n-\n-start_watchdog \"$timeout\" \"$file\" \"$diff\" \"$expSize\" &\n+start_watchdog \"$timeout\" \"$file\" \"$diff\" \"$expSize\" \"$xpid\" &", 
  "html_url": "https://github.com/opensciencegrid/StashCache/pull/6#discussion_r68804133", 
  "id": 68804133, 
  "original_commit_id": "12f0e6f83d761c85e7abce27184b289f40321c64", 
  "original_position": 103, 
  "path": "bin/downloading_timeout.sh", 
  "position": null, 
  "pull_request_review_id": null, 
  "pull_request_url": "https://api.github.com/repos/opensciencegrid/StashCache/pulls/6", 
  "updated_at": "2016-07-06T20:29:43Z", 
  "url": "https://api.github.com/repos/opensciencegrid/StashCache/pulls/comments/68804133", 
  "user": {
    "avatar_url": "https://avatars1.githubusercontent.com/u/79268?v=4", 
    "events_url": "https://api.github.com/users/djw8605/events{/privacy}", 
    "followers_url": "https://api.github.com/users/djw8605/followers", 
    "following_url": "https://api.github.com/users/djw8605/following{/other_user}", 
    "gists_url": "https://api.github.com/users/djw8605/gists{/gist_id}", 
    "gravatar_id": "", 
    "html_url": "https://github.com/djw8605", 
    "id": 79268, 
    "login": "djw8605", 
    "organizations_url": "https://api.github.com/users/djw8605/orgs", 
    "received_events_url": "https://api.github.com/users/djw8605/received_events", 
    "repos_url": "https://api.github.com/users/djw8605/repos", 
    "site_admin": false, 
    "starred_url": "https://api.github.com/users/djw8605/starred{/owner}{/repo}", 
    "subscriptions_url": "https://api.github.com/users/djw8605/subscriptions", 
    "type": "User", 
    "url": "https://api.github.com/users/djw8605"
  }
}
