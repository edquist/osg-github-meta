{
  "_links": {
    "html": {
      "href": "https://github.com/opensciencegrid/osg-test/pull/26#discussion_r66253866"
    }, 
    "pull_request": {
      "href": "https://api.github.com/repos/opensciencegrid/osg-test/pulls/26"
    }, 
    "self": {
      "href": "https://api.github.com/repos/opensciencegrid/osg-test/pulls/comments/66253866"
    }
  }, 
  "author_association": "OWNER", 
  "body": "Hm, I am not sure that I agree with this change. At very least, I would have made the match optional and, via an argument, made it required by default. I think that the point was that one is _expecting_ the match to work and hence the change to take place.\n\nAnother possibility is to have the function return the number of changed lines, such that the caller could examine the return and decide if 0 (no lines changed) is acceptable \u2014 but of course both the PR change and this idea change the semantics of this function and thus require going through test code to see if that is OK.\n", 
  "commit_id": "a2c130ac341529e10360df211193c7d0abc56845", 
  "created_at": "2016-06-08T13:23:23Z", 
  "diff_hunk": "@@ -144,12 +144,9 @@ def replace(path, old_line, new_line, owner=None, backup=True):\n     write(path, lines_to_write, owner, backup)\n \n def replace_regexpr(path, regexp, new_line, owner=None, backup=True):\n-    \"\"\"Replace an old line that matches regexpr with a new line in given path.                                                     \n-    The 'owner' and 'backup' arguments are passed to write().                                                                                  \n+    \"\"\"Replace an old line that matches regexpr with a new line in given path.\n+    The 'owner' and 'backup' arguments are passed to write().\n     \"\"\"\n-    match = re.search(regexp, new_line)\n-    if not match:\n-       raise ValueError(\"The new_line '%s' does not match reg expr '%s'\" % (new_line, regexp)) \n     lines_to_write = []", 
  "html_url": "https://github.com/opensciencegrid/osg-test/pull/26#discussion_r66253866", 
  "id": 66253866, 
  "original_commit_id": "a2c130ac341529e10360df211193c7d0abc56845", 
  "original_position": 12, 
  "path": "osgtest/library/files.py", 
  "position": 12, 
  "pull_request_review_id": null, 
  "pull_request_url": "https://api.github.com/repos/opensciencegrid/osg-test/pulls/26", 
  "updated_at": "2016-06-08T13:23:23Z", 
  "url": "https://api.github.com/repos/opensciencegrid/osg-test/pulls/comments/66253866", 
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/7377451?v=4", 
    "events_url": "https://api.github.com/users/osg-cat/events{/privacy}", 
    "followers_url": "https://api.github.com/users/osg-cat/followers", 
    "following_url": "https://api.github.com/users/osg-cat/following{/other_user}", 
    "gists_url": "https://api.github.com/users/osg-cat/gists{/gist_id}", 
    "gravatar_id": "", 
    "html_url": "https://github.com/osg-cat", 
    "id": 7377451, 
    "login": "osg-cat", 
    "organizations_url": "https://api.github.com/users/osg-cat/orgs", 
    "received_events_url": "https://api.github.com/users/osg-cat/received_events", 
    "repos_url": "https://api.github.com/users/osg-cat/repos", 
    "site_admin": false, 
    "starred_url": "https://api.github.com/users/osg-cat/starred{/owner}{/repo}", 
    "subscriptions_url": "https://api.github.com/users/osg-cat/subscriptions", 
    "type": "User", 
    "url": "https://api.github.com/users/osg-cat"
  }
}
