{
  "_links": {
    "html": {
      "href": "https://github.com/opensciencegrid/docs/pull/170#discussion_r139221790"
    }, 
    "pull_request": {
      "href": "https://api.github.com/repos/opensciencegrid/docs/pulls/170"
    }, 
    "self": {
      "href": "https://api.github.com/repos/opensciencegrid/docs/pulls/comments/139221790"
    }
  }, 
  "author_association": "OWNER", 
  "body": "Broken link", 
  "commit_id": "a5dbad173d6abc80444eee504b53370ee088f79b", 
  "created_at": "2017-09-15T18:38:41Z", 
  "diff_hunk": "@@ -0,0 +1,983 @@\n+GlideinWMS VO Frontend Installation\n+===================================\n+\n+About This Document\n+===================\n+\n+This document describes how to install the Glidein Workflow Managment System (GlideinWMS) VO Frontend for use with the OSG glidein factory. This software is the minimum requirement for a VO to use glideinWMS.\n+\n+This document assumes expertise with Condor and familiarity with the glideinWMS software. It **does not** cover anything but the simplest possible install. Please consult the [Glidein WMS reference documentation](http://www.uscms.org/SoftwareComputing/Grid/WMS/glideinWMS/doc.prd/install.html) for advanced topics, including non-`root`, non-RPM-based installation.\n+\n+This document covers three components of the GlideinWMS a VO needs to install:\n+\n+-   **User Pool Collectors**: A set of `condor_collector` processes. Pilots submitted by the factory will join to one of these collectors to form a Condor pool.\n+-   **User Pool Schedd**: A `condor_schedd`. Users may submit Condor vanilla universe jobs to this schedd; it will run jobs in the Condor pool formed by the **User Pool Collectors**.\n+-   **Glidein Frontend**: The frontend will periodically query the **User Pool Schedd** to determine the desired number of running job slots. If necessary, it will request the factory to launch additional pilots.\n+\n+This guide covers installation of all three components on the same host: it is designed for small to medium VOs (see the Hardware Requirements below). Given a significant, large host, we have been able to scale the single-host install to 20,000 running jobs.\n+\n+![alt text][logo]\n+\n+[logo]: https://twiki.opensciencegrid.org/twiki/pub/Documentation/Release3/InstallGlideinWMSFrontend/simple_diagram.png \"GlideinWMS Simple Diagra\"\n+\n+Release\n+=======\n+\n+This document reflects glideinWMS v3.2.17.\n+\n+How to get Help?\n+================\n+\n+To get assistance about the OSG software please use [this page](../common/help.md).\n+\n+For specific questions about the Frontend configuration (and how to add it in your HTCondor infrastructure) you can email the glideinWMS support <glideinwms-support@fnal.gov>\n+\n+To request access the OSG Glidein Factory (e.g. the UCSD factory) you have to send an email to <osg-gfactory-support@physics.ucsd.edu> (see below).\n+\n+Requirements\n+============\n+\n+Host and OS\n+-----------\n+\n+1. A host to install the GlideinWMS Frontend (pristine node). \n+2. OS is Red Hat Enterprise Linux 6, 7, and variants (see [details](../common/yum.md)). Currently most of our testing has been done on Scientific Linux 6. \n+3. Root access\n+\n+The Glidein WMS VO Frontend has the following hardware requirements for a production host:\n+\n+- **CPU**: Four cores, preferably no more than 2 years old.\n+- **RAM**: 3GB plus 2MB per running job. For example, to sustain 2000 running jobs, a host with 5GB is needed.\n+- **Disk**: 30GB will be plenty sufficient for all the binaries, config and log files related to glideinWMS. As this will be an interactive submit host, plan enough disk space for your users' jobs. Depending on your workflow, this might require 2MB to 2GB per job in a workflow.\n+\n+Users\n+-----\n+\n+The Glidein WMS Frontend installation will create the following users unless they are already created.\n+\n+| User       | Default uid | Comment                                                                                                                        |\n+|:-----------|:------------|:-------------------------------------------------------------------------------------------------------------------------------|\n+| `apache`   | 48          | Runs httpd to provide the monitoring page (installed via dependencies).                                                        |\n+| `condor`   | none        | Condor user (installed via dependencies).                                                                                      |\n+| `frontend` | none        | This user runs the glideinWMS VO frontend. It also owns the credentials forwarded to the factory to use for the glideins.      |\n+| `gratia`   | none        | Runs the Gratia probes to collect accounting data (optional see [the Gratia section below](#Adding_Gratia_Accounting_and_a_L)) |\n+\n+Note that if uid 48 is already taken but not used for the appropriate users, you will experience errors. [Details...](https://twiki.grid.iu.edu/bin/view/Documentation/Release3/KnownProblems#Reserved_user_ids_especially_for)\n+\n+Credentials and Proxies\n+-----------------------\n+\n+The VO Frontend will use two credentials in its interactions with the the other glideinWMS services. At this time, these will be proxy files. \n+\n+1. the %GREEN%VO Frontend proxy%ENDCOLOR% (used to authenticate with the other glideinWMS services). \n+2. one or more glideinWMS %RED%pilot proxies%ENDCOLOR% (used/delegated to the factory services and submitted on the glideinWMS pilot jobs).\n+\n+The %GREEN%VO Frontend proxy%ENDCOLOR% and the %RED% pilot proxy%ENDCOLOR% can be the same. By default, the VO Frontend will run as user `frontend` (UID is machine dependent) so these proxies must be owned by the user `frontend`.\n+\n+### VO Frontend proxy\n+\n+The use of a service certificate is recommended. Then you create a proxy from the certificate as explained in the [proxy configuration section](#Proxy_Configuration). This can be a plain grid proxy (from `grid-proxy-init`), no VO extensions are required.\n+\n+**You must notify the Factory operation of the DN of this proxy when you initially setup the frontend and each time the DN changes**.\n+\n+### Pilot proxies\n+\n+This proxy is used by the factory to submit the glideinWMS pilot jobs. Therefore, they must be authorized to access to the CEs (factory entry points) where jobs are submitted. There is no need to notify the Factory operation about the DN of this proxy (neither at the initial registration nor for subsequent changes). This second proxy has no special requirement or controls added by the factory but will probably require VO attributes because of the CEs: if you are able to use this proxy to submit jobs to the CEs where the Factory runs glideinWMS pilots for you, then the proxy is OK. You can test your proxy using `globusrun` or HTCondor-G\n+\n+To check the important information about a pem certificate you can use: `openssl x509 -in /etc/grid-security/hostcert.pem -subject -issuer -dates -noout`. You will need that to find out information for the configuration files and the request to the GlideinWMS factory.\n+\n+### Certificates/Proxies configuration example\n+\n+This document has a [proxy configuration section](#Proxy_Configuration) that uses the host certificate/key and a user certificate to generate the required proxies.", 
  "html_url": "https://github.com/opensciencegrid/docs/pull/170#discussion_r139221790", 
  "id": 139221790, 
  "original_commit_id": "d5eda911e523206b2fba85b5a7a3e5c915eaffd3", 
  "original_position": 91, 
  "path": "docs/other/install-gwms-frontend.md", 
  "position": null, 
  "pull_request_review_id": 63127568, 
  "pull_request_url": "https://api.github.com/repos/opensciencegrid/docs/pulls/170", 
  "updated_at": "2017-09-15T20:07:27Z", 
  "url": "https://api.github.com/repos/opensciencegrid/docs/pulls/comments/139221790", 
  "user": {
    "avatar_url": "https://avatars0.githubusercontent.com/u/5246893?v=4", 
    "events_url": "https://api.github.com/users/matyasselmeci/events{/privacy}", 
    "followers_url": "https://api.github.com/users/matyasselmeci/followers", 
    "following_url": "https://api.github.com/users/matyasselmeci/following{/other_user}", 
    "gists_url": "https://api.github.com/users/matyasselmeci/gists{/gist_id}", 
    "gravatar_id": "", 
    "html_url": "https://github.com/matyasselmeci", 
    "id": 5246893, 
    "login": "matyasselmeci", 
    "organizations_url": "https://api.github.com/users/matyasselmeci/orgs", 
    "received_events_url": "https://api.github.com/users/matyasselmeci/received_events", 
    "repos_url": "https://api.github.com/users/matyasselmeci/repos", 
    "site_admin": false, 
    "starred_url": "https://api.github.com/users/matyasselmeci/starred{/owner}{/repo}", 
    "subscriptions_url": "https://api.github.com/users/matyasselmeci/subscriptions", 
    "type": "User", 
    "url": "https://api.github.com/users/matyasselmeci"
  }
}
