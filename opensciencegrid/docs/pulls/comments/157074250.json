{
  "_links": {
    "html": {
      "href": "https://github.com/opensciencegrid/docs/pull/271#discussion_r157074250"
    }, 
    "pull_request": {
      "href": "https://api.github.com/repos/opensciencegrid/docs/pulls/271"
    }, 
    "self": {
      "href": "https://api.github.com/repos/opensciencegrid/docs/pulls/comments/157074250"
    }
  }, 
  "author_association": "OWNER", 
  "body": "probably -> may", 
  "commit_id": "4c9f6a729fc81dfb4f7176cfce003a5500864419", 
  "created_at": "2017-12-14T22:01:44Z", 
  "diff_hunk": "@@ -0,0 +1,375 @@\n+Troubleshooting Gratia Accounting\n+=================================\n+\n+This document will help you troubleshoot problems with the Gratia Accounting, particularly with problems in collecting and reporting accounting information to the central OSG accounting service. See also other documents recommended in the Reference section below.\n+\n+\n+Gratia/GRACC: The Big Picture\n+-----------------------\n+\n+Gratia is software used in OSG to gather accounting information. The information is collected from individual resources at a site, such as a Compute Element or a a submission host. The program that collects the data is called a \"Gratia probe\". The information is transferred to a GRACC server. Most sites will choose to send the accounting data to the central OSG Gratia server, but you can also use a Gratia server at your site (which can send forward the data to the central OSG Gratia server). Here is a diagram:\n+\n+!!! note \"Difference between Gratia and GRACC\"\n+    Gratia is the legacy name of the OSG Accounting system.  GRACC is the new name of the server and hosted components of the accounting system.  When we refer to Gratia, we mean either the data or the probes on the resources.  If we mention GRACC, we are referring to the hosted components that the OSG maintains.\n+\n+![Gratia Basics](../images/gratia-overview.png)\n+\n+These are the definitions of the major elements in the above figure.\n+\n+-   **Gratia probe**: A piece of software that collects accounting data from the computer on which it's running, and transmits it to a Gratia server.\n+-   **GRACC server**: A server that collects Gratia accounting data from one or more sites and can share it with users via a web page.  The GRACC server is hosted by the OSG.\n+-   **Reporter**: A web service running on the GRACC server. Users can connect to the reporter via a web browser to explore the Gratia data.\n+-   **Collector**: A web service running on the GRACC server that collects data from one or more Gratia probes. Users do not directly interact with the collector.\n+\n+You can see the OSG's GRACC website at https://gracc.opensciencegrid.org.\n+\n+You can see a fancier version of the Gratia data at [display.grid.iu.edu](http://display.grid.iu.edu/). This is **not** running a Gratia collector, but is a separate service.\n+\n+Gratia Probes\n+-------------\n+\n+Gratia Probes are periodically run as cron jobs, but different probes will run at different intervals. The cron jobs will always run and you should not remove them. You can find them in `/etc/cron.d`.\n+\n+However, the cron jobs will only do anything if you have enabled them. You enable them via an init script. For example, to enable them:\n+\n+    :::console\n+    root@host # service gratia-probes-cron start\n+    Enabling gratia probes cron:                               [  %GREEN%OK%ENDCOLOR%  ]\n+\n+To disable them:\n+\n+    :::console\n+    root@host # service gratia-probes-cron stop\n+    Disabling gratia probes cron:                               [  %GREEN%OK%ENDCOLOR%  ]\n+\n+You also need to enable individual probes, usually via `osg-configure`.  Documentation on using `osg-configure` with Gratia [documented elsewhere](configuration-with-osg-configure#gratia).\n+\n+### Running Gratia Probes\n+\n+When the cron jobs are enabled and run, they go through the following process, with minor changes between different Gratia probes:\n+\n+1.  The probe is invoked. It reads its configuration from `/etc/gratia/%RED%PROBE-NAME%ENDCOLOR%/ProbeConfig`.\n+2.  It collects the accounting information from the underlying system. For example, the Condor probe will read it from the `PER_JOB_HISTORY_DIR`, which is usually `/var/lib/gratia/data`.\n+3.  It transforms the data into Gratia records and saves them into `/var/lib/gratia/tmp/gratiafiles/`\n+4.  When there are sufficient Gratia records, or when sufficient time has passed, it uploads sets of records in batches to the GRACC server, then removes them from the `gratiafiles` directory.\n+5.  All progress is logged to `/var/log/gratia`.\n+6.  If there are failures in uploading the files to the GRACC server\n+    1.  Files are not removed from `gratiafiles` until they are successfully uploaded.\n+    2.  Errors are logged to log files in `/var/log/gratia`.\n+    3.  The uploads will be tried again later.\n+\n+### Gratia Probe Configuration\n+\n+In normal cases, `osg-configure` does the editing of the probe configuration files, at least on the CE. The configuration is found in `/etc/osg/config.d/30-gratia.ini` and [documented elsewhere](configuration-with-osg-configure#gratia).\n+\n+If there are problems or special configuration, you might need to edit the Gratia configuration files yourself. Each probe has a separate configuration file found in `/etc/gratia/%RED%PROBE-NAME%ENDCOLOR%/ProbeConfig`.\n+\n+The ProbeConfig files have many details. A few options that you might need to edit are shown before. This is **not** a complete file, but only shows a subset of the options.\n+\n+``` file\n+<ProbeConfiguration \n+\n+    CollectorHost=\"gratia-osg-itb.opensciencegrid.org:80\"\n+    SSLHost=\"gratia-osg-itb.opensciencegrid.org:80\"\n+    SSLRegistrationHost=\"gratia-osg-itb.opensciencegrid.org:80\"\n+\n+    ProbeName=\"condor:fermicloud084.fnal.gov\"\n+    SiteName=\"WISC_OSG_EDU\"\n+    EnableProbe=\"1\"\n+/>\n+```\n+\n+The options you see here are:\n+\n+| Option              | Comments                                                                               |\n+|:--------------------|:---------------------------------------------------------------------------------------|\n+| CollectorHost       | The GRACC server this probe reports to                                                |\n+| SSLHost             | The GRACC server this probe reports to                                                |\n+| SSLRegistrationHost | The GRACC server this probe reports to                                                |\n+| ProbeName           | The unique name for this probe. Note that it includes the probe type and the host name |\n+| SiteName            | The name of your site, as registered in OIM. If your site must be registered in OIM    |\n+| EnableProbe         | The probe will only run if this is \"1\"                                                 |\n+\n+Again, there are many more options in this file. Most of the time you won't need to touch them.\n+\n+Are the Gratia cron jobs running? \n+---------------------------------\n+\n+You should make sure the Gratia cron jobs are running. The simplest way is with the `service` command:\n+\n+    :::console\n+    root@host # /sbin/service gratia-probes-cron status\n+    gratia probes cron is enabled.\n+\n+If it is not enabled, enable it as described above.\n+\n+A future release of Gratia will provide status on each of the individual probes, but right now this only ensures that the basic cron job is running. In the meantime, you can check if the individual Gratia probes are enabled. To do this, look at the `EnableProbe` option in the `ProbeConfig` file, as described above. A quick command to do this is shown here. Note that the Condor and GridFTP Transfer probes are enabled while the glexec probe is disabled:\n+\n+    :::console\n+    root@host # cd /etc/gratia\n+    root@host # grep -r EnableProbe *\n+    condor/ProbeConfig:    EnableProbe=\"1\"\n+    glexec/ProbeConfig:    EnableProbe=\"0\"\n+    gridftp-transfer/ProbeConfig:    EnableProbe=\"1\"\n+\n+If you see no log files in `/var/log/gratia` you may have an error in the probe configuration file. Run manually the test for your probe (check `/etc/cron.d/gratia-probe-condor.cron`), e.g. `/usr/share/gratia/common/cron_check  /etc/gratia/condor/ProbeConfig`. If there is an error you may get a suggestion on where it is, e.g.:\n+\n+    :::console\n+    root@host # /usr/share/gratia/common/cron_check  /etc/gratia/condor/ProbeConfig\n+    Parse error in /etc/gratia/condor/ProbeConfig: not well-formed (invalid token): line 21, column 4\n+\n+Correct the error and restart gratia.\n+\n+Have you configured the resource names correctly? \n+-------------------------------------------------\n+\n+Do the names of your resources match the names in OIM?  Gratia retrieves the resource name from the `Site Information` section of the `/etc/osg/config.d/40-siteinfo.ini`\n+\n+\n+``` file\n+;===================================================================\n+;                       Site Information\n+;===================================================================\n+\n+[Site Information]\n+; The group option indicates the group that the OSG site should be listed in,\n+; for production sites this should be OSG, for vtb or itb testing it should be\n+; OSG-ITB\n+; \n+; YOU WILL NEED TO CHANGE THIS\n+group = OSG\n+\n+; The host_name setting should give the host name of the CE  that is being \n+; configured, this setting must be a valid dns name that resolves\n+; \n+; YOU WILL NEED TO CHANGE THIS\n+host_name = tusker-gw1.unl.edu\n+\n+; The resource setting should be set to the same value as used in the OIM \n+; registration at the goc \n+; \n+; YOU WILL NEED TO CHANGE THIS\n+resource = Tusker-CE1\n+\n+; The resource_group setting should be set to the same value as used in the OIM \n+; registration at the goc \n+; \n+; YOU WILL NEED TO CHANGE THIS\n+resource_group = Tusker\n+\n+```\n+\n+Do those names match the names that you registered with OIM? If not, edit the names, and rerun \"osg-configure -c\".\n+\n+Did the site name change?\n+-------------------------\n+\n+Was the site previously reporting data, but the site name (not host name, but site name) changed? When the site name changes, you need to ask the Gratia operations team to update the name of your site at the GRACC collector. To do this:\n+\n+1.  Open a ticket at [the GOC ticket web page](https://ticket.grid.iu.edu/goc/submit)\n+2.  Select \"Software or Service\"\n+3.  Select \"GRACC Operations\"\n+4.  Type a friendly email that asks the GRACC team to change your site name at the collector. Make sure to tell them the old name and the new name.\n+\n+ Is a site reporting data?\n+--------------------------\n+\n+You can see if the OSG GRACC Server is getting data from a site by going to [GRACC](https://gracc.opensciencegrid.org/dashboard/db/pilot-jobs-summary?orgId=1):\n+\n+1.  Specify the site name in Facility\n+\n+Condor must be configured to put information about each job into a special directory.\n+-------------------------------------------------------------------------------------\n+\n+Gratia will read and remove the files in order to collect the accounting information.\n+\n+The configuration variable is called `PER_JOB_HISTORY_DIR`. If you install the OSG RPM for Condor, the Gratia probe will extend its configuration by adding a file to `/etc/condor/config.d`, and will set this variable to `/var/lib/gratia/data`. If you are using a different installation method, you probably need to set the variable yourself. You can check if it's set by using `condor_config_val`, like this:", 
  "html_url": "https://github.com/opensciencegrid/docs/pull/271#discussion_r157074250", 
  "id": 157074250, 
  "original_commit_id": "ebc3f346824e46557b3a09f15ad4cccf83dc59c5", 
  "original_position": 186, 
  "path": "docs/other/troubleshooting-gratia.md", 
  "position": null, 
  "pull_request_review_id": 83653096, 
  "pull_request_url": "https://api.github.com/repos/opensciencegrid/docs/pulls/271", 
  "updated_at": "2018-01-10T21:33:15Z", 
  "url": "https://api.github.com/repos/opensciencegrid/docs/pulls/comments/157074250", 
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/390105?v=4", 
    "events_url": "https://api.github.com/users/brianhlin/events{/privacy}", 
    "followers_url": "https://api.github.com/users/brianhlin/followers", 
    "following_url": "https://api.github.com/users/brianhlin/following{/other_user}", 
    "gists_url": "https://api.github.com/users/brianhlin/gists{/gist_id}", 
    "gravatar_id": "", 
    "html_url": "https://github.com/brianhlin", 
    "id": 390105, 
    "login": "brianhlin", 
    "organizations_url": "https://api.github.com/users/brianhlin/orgs", 
    "received_events_url": "https://api.github.com/users/brianhlin/received_events", 
    "repos_url": "https://api.github.com/users/brianhlin/repos", 
    "site_admin": false, 
    "starred_url": "https://api.github.com/users/brianhlin/starred{/owner}{/repo}", 
    "subscriptions_url": "https://api.github.com/users/brianhlin/subscriptions", 
    "type": "User", 
    "url": "https://api.github.com/users/brianhlin"
  }
}
