{
  "_links": {
    "html": {
      "href": "https://github.com/opensciencegrid/technology/pull/93#discussion_r132790767"
    }, 
    "pull_request": {
      "href": "https://api.github.com/repos/opensciencegrid/technology/pulls/93"
    }, 
    "self": {
      "href": "https://api.github.com/repos/opensciencegrid/technology/pulls/comments/132790767"
    }
  }, 
  "author_association": "OWNER", 
  "body": "I think we can drop this subsection", 
  "commit_id": "9cdea4f25eaf8ededda358400a71d1ae8b34ab13", 
  "created_at": "2017-08-11T21:54:09Z", 
  "diff_hunk": "@@ -0,0 +1,292 @@\n+Notes on Koji-Hub Setup\n+=======================\n+\n+[Current Koji documentation](https://docs.pagure.org/koji/) may be of use.\n+\n+Tags\n+----\n+\n+### Base tags\n+\n+#### dist-el\\[567\\]-build\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=dist-el%3F-build)\n+\n+These tags contains 3 external repos each, hosted locally under <http://mirror.batlab.org/pub/linux>:\n+\n+-   `dist-el[567]-epel`: A mirror of the EPEL 5/6/7 repositories\n+-   `dist-el[567]-centos*`: A mirror of the base CentOS repositories\n+-   `dist-el[567]-centos-updates`: A mirror of the CentOS Updates repositories\n+\n+We don't put any packages in them (except for ones required for building, like `buildsys-macros` and `fetch-sources`), and generally don't build from them directly, but use tag inheritance.\n+\n+#### osg-el\\[567\\]\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-el%3F)\n+\n+These tags contains all the *package names* that we put into OSG; `koji add-pkg` adds to them. `osg-build` does this automatically. The tags do not actually contain any builds (i.e. packages with version-release). All the other `osg-*` tags inherit from these (either directly or indirectly). The purpose of this is to make promoting builds easier, since it keeps you from having to run `add-pkg` when you promote.\n+\n+#### kojira-fake\n+\n+[Tag](https://koji.chtc.wisc.edu/koji/taginfo?tagID=10)\n+\n+This tag (and targets building to it) were created because `kojira` does not automatically regenerate a repo unless it's the source of another repo. Without this, the osg-development tags (for example) wouldn't get regenerated automatically after a build.\n+\n+### Main OSG tags\n+\n+#### osg-3.\\[123\\]-el\\[567\\]-build\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-3.%3F-el%3F-build)\n+\n+These are used to initialize the buildroot of most packages we make. They inherit from their respective dist-build and osg-development tags. The EL5 and EL6 tags also contain the `jpackage[56]-bin` external repos under <http://mirror.batlab.org/pub/jpackage/> since we use those for some builds.\n+\n+**Note** that the JPackage external repos must have a better priority than the OS and EPEL external repos to avoid build problems for Java packages.\n+\n+#### osg-upcoming-el\\[567\\]-build\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-upcoming-el%3F-build)\n+\n+These tags are special in that they also need to inherit from the latest mainline osg-build repo (that is, if trunk is 3.3, then `osg-upcoming-el6-build` should inherit from `osg-3.3-el6-build`).\n+\n+#### osg-\\*-el\\[567\\]-development\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-*-el%3F-development)\n+\n+These contain the builds in the `osg-minefield` repos. The `osg-development` repos hosted by the GOC take packages from this, so `osg-development` is pretty much `osg-minefield` after a 1-hour delay. They inherit from osg-testing (and occasionally from the more specialized branches like el5-gt52-experimental, though that is now discouraged). Builds that are made using the `osg-el[567]` targets (default if you're using `osg-build`) get their buildroots from the newest osg-build tags and put their results in the newest osg-development tags.\n+\n+#### osg-\\*-el\\[567\\]-testing\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-*-el%3F-testing)\n+\n+These contain the builds in the `osg-testing` repos. They inherit from the respective `osg-release` tags.\n+\n+#### osg-\\*-el\\[567\\]-prerelease\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-*-el%3F-prerelease)\n+\n+These are a staging are for packages that we are *certain* will be released in the next release. They are otherwise empty. These are used for testing and for building the tarball clients.\n+\n+#### osg-\\*-el\\[567\\]-release\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-*-el%3F-release)\n+\n+These contain the builds in the `osg-release` repos. They should be locked except for when moving packages from the `osg-prerelease` repos to the `osg-release` repos. They inherit from `osg-el[567]`.\n+\n+#### osg-3.\\[123\\]-el\\[567\\]-release-build\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-3.%3F-el%3F-release-build)\n+\n+These inherit the `dist-*-build` tags and the `osg-*-release` tags, putting a base OS along with OSG packages in a single repo, without the need for yum priorities. It is used, along with `osg-*-prerelease`, for building the tarball client. Note that there are no `release-build` repos for upcoming.\n+\n+#### osg-3.\\[123\\]-el\\[567\\]-contrib\n+\n+[Tag list](https://koji.chtc.wisc.edu/koji/search?match=glob&type=tag&terms=osg-*-contrib)\n+\n+These contain the builds in the `osg-contrib` repos. Note that there are no `osg-upcoming-contrib` repos.\n+\n+### Specialized tags\n+\n+These tags are generally made for long projects which may be in an unstable state and should not interfere with the main development of OSG packages. An example is a full-scale Globus update, where many packages have to be built, using each other as dependencies, and the whole system is not considered usable until all the updates are done. They should generally be removed after the work is done.\n+\n+#### el5-pegasus and el5-pegasus-build\n+\n+These tags were made for Mats Rynge of the Pegasus project to build into.\n+\n+#### el5-lcmaps-upgrade and el5-lcmaps-upgrade-build\n+\n+These tags were made for Dave Dykstra to build into.\n+\n+#### el\\[56\\]-condor-unified-development and el\\[56\\]-condor-unified-development-build\n+\n+These tags were made for Carl Edquist's work on the unified HTCondor RPM.\n+\n+### Collaborator Tags\n+\n+#### hcc-\\*\n+\n+For use by the Holland Computing Center at UNL.\n+\n+#### uscms-\\*\n+\n+For use by US CMS.\n+\n+Build Targets\n+-------------\n+\n+A koji *target* pairs a build tag (which contains packages needed to build software) and a destination tag (which the software will be tagged into once it is built).\n+\n+### osg-el\\[567\\]\n+\n+These build from the osg-\\*-el\\[567\\]-build tags for the current release series into the osg-\\*-el\\[567\\]-development tags and are the primary targets used for building OSG software.\n+\n+### osg-3.\\[123\\]-el\\[567\\]\n+\n+These build from the osg-\\*-el\\[567\\]-build tags into the osg-\\*-el\\[567\\]-development tags and are used for building to releases other than the current one.\n+\n+### osg-upcoming-el\\[567\\]\n+\n+These build from the osg-upcoming-el\\[567\\]-build tags into the osg-upcoming-el\\[567\\]-development tags and are used for building to upcoming.\n+\n+### dist-el\\[567\\]-build\n+\n+These build from the `dist-el*-build` tag directly into the `dist-el*-build` tag. It is used for making builds that should be in every buildroot.\n+\n+### kojira-fake-\\*\n+\n+These fool kojira into regenerating their build tags as repos we can yum install from. Without this, the osg-development tags (for example) wouldn't get regenerated and osg-minefield wouldn't work.\n+\n+### hcc-el\\[567\\], perfsonar-el\\[56\\], uscms-el\\[56\\], panda-el6\n+\n+These were made for builds made for our collaborators to build into their tags.\n+\n+Signing plugin\n+--------------\n+\n+The signing plugin is used to sign packages right after they are built. We give it a GPG signing key and corresponding passphrase. It is configured per build tag. The current default is to use the OSG key to sign if a configuration is not specified. This is because it's very difficult to sign packages after the fact, so it's better to erroneously sign some of them with the wrong key than to not sign them.\n+\n+It is therefore important that whenever a new build tag is created, a corresponding config section for the signing plugin is added, too.\n+\n+This comes from the package `koji-plugin-sign` and has configs in `/etc/koji-sign-plugin` and `/etc/koji-hub/plugins`. There is a script called `fix-permissions` in both directories that will make sure the plugin can read the config.\n+\n+Tweaks\n+------\n+\n+These are local config changes we needed to make to get certain features to work.\n+\n+### Using proxy certs\n+\n+`/etc/sysconfig/httpd` needed to be changed to include the following lines:\n+\n+    OPENSSL_ALLOW_PROXY=1\n+    OPENSSL_ALLOW_PROXY_CERTS=1\n+\n+    export OPENSSL_ALLOW_PROXY\n+    export OPENSSL_ALLOW_PROXY_CERTS\n+\n+The user must use RFC proxies and must have a version of the koji client of 1.6.0-6.osg or newer.\n+\n+### Git builds\n+\n+On EL5 only, we needed to run the following to allow Git builds from github: `git config --system http.sslVerify false` This is to avoid server cert verification failures against github.com\n+", 
  "html_url": "https://github.com/opensciencegrid/technology/pull/93#discussion_r132790767", 
  "id": 132790767, 
  "original_commit_id": "d3fdeb2719aef9e7b1687fc5d1dd91648a47a585", 
  "original_position": 171, 
  "path": "docs/software/koji-hub-setup.md", 
  "position": null, 
  "pull_request_review_id": 55915181, 
  "pull_request_url": "https://api.github.com/repos/opensciencegrid/technology/pulls/93", 
  "updated_at": "2017-08-11T22:14:23Z", 
  "url": "https://api.github.com/repos/opensciencegrid/technology/pulls/comments/132790767", 
  "user": {
    "avatar_url": "https://avatars3.githubusercontent.com/u/390105?v=4", 
    "events_url": "https://api.github.com/users/brianhlin/events{/privacy}", 
    "followers_url": "https://api.github.com/users/brianhlin/followers", 
    "following_url": "https://api.github.com/users/brianhlin/following{/other_user}", 
    "gists_url": "https://api.github.com/users/brianhlin/gists{/gist_id}", 
    "gravatar_id": "", 
    "html_url": "https://github.com/brianhlin", 
    "id": 390105, 
    "login": "brianhlin", 
    "organizations_url": "https://api.github.com/users/brianhlin/orgs", 
    "received_events_url": "https://api.github.com/users/brianhlin/received_events", 
    "repos_url": "https://api.github.com/users/brianhlin/repos", 
    "site_admin": false, 
    "starred_url": "https://api.github.com/users/brianhlin/starred{/owner}{/repo}", 
    "subscriptions_url": "https://api.github.com/users/brianhlin/subscriptions", 
    "type": "User", 
    "url": "https://api.github.com/users/brianhlin"
  }
}
